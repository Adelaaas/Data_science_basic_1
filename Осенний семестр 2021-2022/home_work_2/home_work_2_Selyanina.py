# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZvjAaCx7RyEfT4bRRhyyvh05mfc9ndUg

Задача 1.

Даны четыре действительных числа: x1, y1, x2, y2. Напишите функцию distance(x1, y1, x2, y2), вычисляющая расстояние между точкой (x1,y1) и (x2,y2).
"""

from math import sqrt
def distance(x1, y1, x2, y2):
  return sqrt((x2-x1)**2 + (y2 - y1)**2)
x1 = int(input())
x2 = int(input())
y1 = int(input())
y2 = int(input())
print(distance(x1, y1, x2, y2))

"""Задача 2.

Написать функцию season(month), принимающую 1 аргумент — номер месяца (от 1 до 12), которая присваивает глобальной переменной s время года, которому этот месяц принадлежит (зима, весна, лето или осень).
"""

month = int(input())
s = ''
def season(month):
    global s
    if month == 1 or month == 2 or month == 12:
      s = "Зима"
    elif 3 <= month <= 5:
      s = "Весна"
    elif 6 <= month <= 8:
      s = "Лето"
    elif 9 <= month <= 11:
      s = "Осень"
    else:
      s = "error"
    print( s )
season( month )

"""Написать функцию is_prime, принимающую 1 аргумент — число от 0 до 1000, и возвращающую True, если оно простое, и False - иначе."""

def is_prime(num):
  if num < 2:
    return False
  if n == 2:
    return True
  for i in range (2, num):
    if num % i == 0:
      return False
    else:
      return True
n = int(input())
print(is_prime(n))

"""Написать функцию reverse_list(lst), которая принимает в качестве аргумента список и возвращаем его в перевернутом виде."""

lst = [int(x) for x in input().split()]
def reverse_list(lst):
  return lst[::-1]
reverse_list(lst)

"""Распечатайте с 4 по 8 символ фразы "Привет мир!" приведенные к верхнему регистру.

"""

print(str.upper('Привет мир!'[3:9]))

"""Напишите код, который все элементы массива x с нечетными индексами переставит в обратном порядке.

"""

x = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

for i in range(1, int(len(x) / 2), 2):
    if not len(x) % 2:
        x[i], x[-i] = x[-i], x[i]
    else:
        x[i], x[-i - 1] = x[-i - 1], x[i]
print(x)

"""Напишите цикл, который выводит все числа от 0 до 500, делящиеся на 7, если в них есть цифра 8.


"""

for n in range(1, 500):
  if n % 7 == 0:
    if n % 10 == 8 or 80<= n % 100 < 90:
      print(n)

"""На вход функция more_than_five(lst) получает список из целых чисел. Результатом работы функции должен стать новый список, в котором содержатся только те числа, которые больше 10 по модулю."""

def more_than_five(lst):
  for i in range(0,len(lst)):
    if abs(lst[i])>10:
      lst1.append(lst[i])
  print(lst1)
lst1=[]
more_than_five(list(map(int,input().split())))
